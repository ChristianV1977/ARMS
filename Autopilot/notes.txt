TODO:
TurretControl
control via programmable block
support for TextPanel
aim & fire weapons
NO_PATH clears when obstruction moves (door support etc.)
collision avoidance by grid layout
waypoint skipping (better pathfinding)
jump drive
saving
mine asteroid / grind grid
repair grid
check for grids connected via landing gear
support for decoy blocks (confuse radar, distract turrets)
display autopilot settings from server
collision avoidance for rotation
search attached grids for block ('B' command)
holding pattern for landing / docking
Autopilot block
separate thread
land on enemy grid

should probably find out if new Vector() creates a valid vector

self clear of NO_PATH is not working

not always disconnecting ???

to save: extend MyObjectBuilder_EntityBase, read information in init, and write information in GetObjectBuilder. If game does not read / write for us, use my own file. Files should be based on save name and contain a date so they can be disposed of.

At some point, implement a search attached grids for block. Need to prioritize, blocks are more likely to have the same name.
Do not do this for enemy. ( we scan individual enemy grids )

text panel:
get commands (with separate code blocks)
display status of drones
filter using programmable block


programmable block:
send messages to Autopilot
need a wait until triggered command and a pause command
targeting based on count blocks on target grid


collision avoidance:
eventually want to be able to use a door, so allow disabling re-direct
eventually want to be able to avoid moving targets, which will likely be a capsule to capsule comparison
build a cross-section by getting every block (multiple blocks should be divided up) and remove one dimension from position
create a capsule that contains cross-section

is obstruction:
	use AABB to eliminate most entities
	use distance to path (line segment) to test inside capsule
	does cross-section come close to potential obstruction

or moving obstacle:
	project target capsule a short distance, maybe 100 seconds
	get detour direction by cross product (if two grids see each other, they divert in opposite directions)

for sidel movement:
	project each face?
	use closest side?



new features:


changes / fixes:

